generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

enum Status {
  Pending
  Success
  Cancelled
}

model User {
  id                  String    @id @unique @default(cuid())
  name                String    @db.VarChar(191)
  username            String    @db.VarChar(191)
  email               String    @unique @db.VarChar(191)
  password            String    @db.VarChar(60)
  role                Role      @default(User)
  avater              String?
  avater_id           String?
  phone               String?   @db.VarChar(13) // MOBILE NUMBER LENGTH
  resetPasswordToken  String?   @db.VarChar(64)
  resetPasswordExpiry DateTime?
  address             Address?
  orders              Order[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@map("users")
}

model Address {
  id        String   @id @unique @default(cuid())
  username  String   @db.VarChar(50)
  address   String   @db.VarChar(191)
  state     String
  city      String
  country   String
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model Order {
  id            String   @id @unique @default(cuid())
  product_name  String
  product_price Float
  ordered_at    DateTime @default(now())
  status        Status
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("orders")
}
